@model BorsaTakip.MVC.Models.CoinDetailsViewModel
@using System.Globalization

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Coin Detayları - BorsaTakip</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        body {
            background: linear-gradient(135deg, #a0e9ff, #e0f7ff);
            color: #0f1419;
            padding-top: 80px; /* fixed navbar boşluğu */
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
        }

        .container-content {
            background-color: #ffffffcc;
            max-width: 1200px;
            margin: auto;
            padding: 30px 40px;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            display: flex;
            gap: 30px;
        }

        .main-content {
            flex: 2;
        }

        .comments-section {
            flex: 1;
            max-height: 600px;
            overflow-y: auto;
        }

        h2, h3 {
            color: #1d9bf0;
            margin-top: 1.5em;
            margin-bottom: 1em;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 30px;
            color: #0f1419;
        }

            table thead {
                background-color: #d1e9ff;
            }

            table th, table td {
                padding: 12px 15px;
                border-bottom: 1px solid #f0f8ff;
                text-align: left;
            }

            table tr:hover {
                background-color: #f0faff;
            }

        /* Navbar stili */
        nav .container {
            background-color: rgba(0, 0, 0, 0.9) !important;
            border-radius: 12px;
        }

        /* Forum yorumları */
        .comments-section {
            flex: 1 1 350px; /* biraz daha geniş minimum genişlik */
            max-height: 750px; /* yüksekliği artırdım */
            overflow-y: auto;
            min-width: 320px;
            padding-left: 20px;
            box-sizing: border-box;
        }

        .comments-container {
            background: #ffffff;
            border-radius: 16px;
            border: none;
            box-shadow: 0 1px 3px rgba(0,0,0,0.12);
            padding: 16px 20px;
            max-height: 750px;
            overflow-y: auto;
            font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
            min-width: 320px;
            width: 100%;
            box-sizing: border-box;
            word-wrap: break-word; /* uzun kelimelerin taşmasını engeller */
            white-space: normal; /* satır sonlarında kırılma */
        }

        .comment-box {
            background: #f5f8fa;
            border-radius: 20px;
            padding: 12px 16px;
            margin-bottom: 12px;
            box-shadow: none;
            transition: background-color 0.2s ease;
            cursor: pointer;
            word-wrap: break-word; /* taşmaları engeller */
        }

        .comment-username {
            font-weight: 700;
            color: #1da1f2;
            margin-right: 8px;
            text-decoration: none;
            white-space: nowrap; /* kullanıcı adı tek satırda */
            overflow: hidden;
            text-overflow: ellipsis; /* taşan kısmı ... ile göster */
            max-width: 150px;
            display: inline-block;
            vertical-align: middle;
        }

        .comment-date {
            font-size: 0.75rem;
            color: #657786;
            float: right;
            font-weight: 400;
            white-space: nowrap;
        }

        .comment-text {
            margin-top: 6px;
            font-size: 1rem;
            line-height: 1.4;
            color: #14171a;
            clear: both;
            word-wrap: break-word;
            white-space: normal;
        }

        .twitter-comment-box {
            background: #fff;
            border-radius: 18px;
            box-shadow: 0 2px 8px 0 rgba(29,155,240,0.08);
            padding: 1rem 1.2rem;
            margin-bottom: 1.1rem;
            display: flex;
            align-items: flex-start;
            gap: 0.9rem;
            transition: box-shadow 0.15s, transform 0.15s;
        }
        .twitter-comment-box:hover {
            box-shadow: 0 4px 16px 0 rgba(29,155,240,0.16);
            transform: translateY(-2px) scale(1.01);
        }
        .twitter-avatar {
            width: 38px;
            height: 38px;
            border-radius: 50%;
            background: #e3f2fd;
            color: #1d9bf0;
            font-weight: 700;
            font-size: 1.25rem;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
            margin-top: 2px;
        }
        .twitter-comment-content {
            flex: 1;
        }
        .twitter-username {
            color: #1d9bf0;
            font-weight: 600;
            font-size: 1.08rem;
            margin-bottom: 0.1rem;
        }
        .twitter-date {
            color: #7a7a7a;
            font-size: 0.93rem;
            margin-bottom: 0.2rem;
        }
        .twitter-text {
            color: #222;
            font-size: 1.05rem;
            margin-bottom: 0;
            word-break: break-word;
        }
        .comments-section {
            background: #f5fafd;
            border-radius: 18px;
            padding: 1.2rem 1.2rem 0.5rem 1.2rem;
            min-width: 320px;
            max-height: 750px;
            overflow-y: auto;
        }

    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
            <div class="container d-flex align-items-center" style="background-color: rgba(0, 0, 0, 0.9); border-radius: 12px;">
                <a class="navbar-brand" href="/">BorsaTakip</a>

                <button class="navbar-toggler ms-auto" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
                        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse justify-content-end" id="navbarSupportedContent">
                    <ul class="navbar-nav mb-2 mb-lg-0 align-items-center">

                        <li class="nav-item">
                            <a class="nav-link" href="/">Ana Sayfa</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/Coin/Search">Coin Ara</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/Forum/Index">Forum</a>
                        </li>

                        <li class="nav-item">
                            <a class="nav-link" href="@Url.Action("Index", "Chat")">Chat (Soru-Cevap)</a>
                        </li>

                        @if (User.Identity == null || !User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <a class="nav-link" href="/Account/Login">Giriş Yap</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/Account/Register">Kayıt Ol</a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" href="@Url.Action("Index", "Profile")">Profilim</a>
                            </li>
                            <li class="nav-item">
                                <form method="post" action="/Account/Logout" id="logoutForm" class="d-inline ms-2">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-outline-light btn-sm">Çıkış Yap</button>
                                </form>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <main>
        <div class="container-content">
            <div class="main-content">
                <h2>Coin Detayları</h2>

                @if (Model == null)
                {
                    <div class="alert alert-danger">Veri bulunamadı.</div>
                }
                else
                {
                    var change24h = Model.CoinDetails.GetProperty("market_data").GetProperty("price_change_percentage_24h").GetDecimal();
                    var isUp = change24h >= 0;
                    var changeColor = isUp ? "text-success" : "text-danger";
                    var changeIcon = isUp ? "▲" : "▼";

                    <div>
                        <strong>Coin Adı:</strong> @Model.CoinDetails.GetProperty("name").GetString() <br />
                        <strong>Simge:</strong> @Model.CoinDetails.GetProperty("symbol").GetString() <br />
                        <strong>Güncel Fiyat (USD):</strong> $@Model.CoinDetails.GetProperty("market_data").GetProperty("current_price").GetProperty("usd").GetDecimal() <br />
                        <strong>24 Saatlik Değişim:</strong>
                        <span class="@changeColor">
                            @changeIcon @change24h.ToString("0.##") %
                        </span>
                        <br />
                    </div>

                    <h3>Son 60 Günlük Fiyat Çizgi Grafiği</h3>
                    <canvas id="histogramChart" width="900" height="400" style="margin-bottom: 30px;"></canvas>

                    <h3>Son 60 Günlük Günlük Fiyatlar (Tablo)</h3>
                    <table>
                        <thead>
                            <tr>
                                <th>Tarih</th>
                                <th>Fiyat (USD)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var pricePoint in Model.PriceHistory.OrderByDescending(p => p.Date))
                            {
                                <tr>
                                    <td>@pricePoint.Date.ToString("dd MMM yyyy")</td>
                                    <td>@pricePoint.Price.ToString("F2")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>

            <div class="comments-section">
                <h3>Forum Yorumları</h3>
                <div id="commentsContainer" class="comments-container">
                    <p>Yorumlar yükleniyor...</p>
                </div>
            </div>
        </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        @if (Model != null && Model.PriceHistory != null && Model.PriceHistory.Count > 0)
        {
        <text>
        const ctx = document.getElementById('histogramChart').getContext('2d');

        const labels = [
            @foreach (var p in Model.PriceHistory.OrderBy(p => p.Date))
            {
                <text>'@p.Date.ToString("yyyy-MM-dd")',</text>
            }
        ];

        const prices = [
            @foreach (var p in Model.PriceHistory.OrderBy(p => p.Date))
            {
                var priceStr = p.Price.ToString("F2", CultureInfo.InvariantCulture);
                <text>@priceStr,</text>
            }
        ];

        const gradient = ctx.createLinearGradient(0, 0, 0, 400);
        gradient.addColorStop(0, 'rgba(29, 155, 240, 0.6)');
        gradient.addColorStop(1, 'rgba(29, 155, 240, 0)');

        const data = {
            labels: labels,
            datasets: [{
                label: 'Fiyat (USD)',
                data: prices,
                fill: true,
                backgroundColor: gradient,
                borderColor: 'rgba(29, 155, 240, 1)',
                borderWidth: 2,
                pointRadius: 3,
                pointHoverRadius: 6,
                tension: 0.3
            }]
        };

        const options = {
            responsive: true,
            scales: {
                x: {
                    title: { display: true, text: 'Tarih' },
                    ticks: { maxRotation: 90, minRotation: 45 }
                },
                y: {
                    beginAtZero: false,
                    title: { display: true, text: 'Fiyat (USD)' }
                }
            },
            plugins: {
                legend: { display: true, position: 'top' },
                tooltip: { mode: 'index', intersect: false }
            },
            interaction: { mode: 'nearest', axis: 'x', intersect: false }
        };

        new Chart(ctx, {
            type: 'line',
            data: data,
            options: options
        });
        </text>
        }

        // Forum yorumlarını fetch ile çekip filtrele
        async function loadComments() {
            try {
                const response = await fetch('https://localhost:7095/api/CoinComments/all');
                if (!response.ok) throw new Error('Yorumlar yüklenemedi.');

                const allComments = await response.json();
                const coinId = '@Model.CoinDetails.GetProperty("id").GetString()'.toLowerCase();

                const comments = allComments.filter(c => c.coinId.toLowerCase() === coinId);

                const container = document.getElementById('commentsContainer');
                container.innerHTML = '';

                if (comments.length === 0) {
                    container.innerHTML = '<p>Henüz yorum yok.</p>';
                    return;
                }

                comments.forEach(c => {
                    const div = document.createElement('div');
                    div.className = 'twitter-comment-box';
                    // Avatar: baş harfi
                    const avatar = document.createElement('div');
                    avatar.className = 'twitter-avatar';
                    avatar.textContent = c.username ? c.username.charAt(0).toUpperCase() : '?';
                    // İçerik
                    const content = document.createElement('div');
                    content.className = 'twitter-comment-content';
                    const uname = document.createElement('div');
                    uname.className = 'twitter-username';
                    // Kullanıcı adı linki
                    const unameLink = document.createElement('a');
                    unameLink.href = `/Profile/Index?username=${encodeURIComponent(c.username)}`;
                    unameLink.textContent = c.username || '';
                    unameLink.style.color = '#1d9bf0';
                    unameLink.style.fontWeight = '600';
                    unameLink.style.textDecoration = 'none';
                    uname.appendChild(unameLink);
                    const date = document.createElement('div');
                    date.className = 'twitter-date';
                    date.textContent = new Date(c.createdAt).toLocaleDateString();
                    const text = document.createElement('div');
                    text.className = 'twitter-text';
                    text.textContent = c.comment || '';
                    // Beğeni sayısı
                    const likeDiv = document.createElement('div');
                    likeDiv.style.fontSize = '0.95rem';
                    likeDiv.style.color = '#1da1f2';
                    likeDiv.style.marginTop = '4px';
                    likeDiv.innerHTML = `👍 <span>${c.likeCount || 0}</span> beğeni`;
                    content.appendChild(uname);
                    content.appendChild(date);
                    content.appendChild(text);
                    content.appendChild(likeDiv); // <-- beğeni sayısını ekle
                    div.appendChild(avatar);
                    div.appendChild(content);
                    container.appendChild(div);
                });
            } catch (error) {
                const container = document.getElementById('commentsContainer');
                container.innerHTML = '<p>Yorumlar yüklenirken hata oluştu.</p>';
                console.error(error);
            }
        }

        loadComments();
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
