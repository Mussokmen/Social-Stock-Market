@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Yapay Zeka Chat";
    var username = HttpContextAccessor.HttpContext.User.Identity?.Name;
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />

<style>
    body {
        background: linear-gradient(135deg, #1d2b64 0%, #f8cdda 100%);
        min-height: 100vh;
        background-attachment: fixed;
        font-family: 'Segoe UI', 'Roboto', Arial, sans-serif;
    }
    .glass-card {
        background: rgba(255,255,255,0.22);
        box-shadow: 0 8px 32px 0 rgba(31,38,135,0.18);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        border-radius: 28px;
        border: 2px solid rgba(255,255,255,0.25);
    }
    .chat-history {
        max-height: 400px;
        overflow-y: auto;
        margin-bottom: 2.2rem;
        padding: 0.7rem 0.3rem 0.7rem 0.3rem;
        background: rgba(30,34,90,0.10);
        border-radius: 18px;
        box-shadow: 0 2px 12px 0 rgba(29,155,240,0.10);
    }
    .chat-bubble {
        display: flex;
        align-items: flex-end;
        margin-bottom: 1.3rem;
        font-size: 1.13rem;
        font-family: 'Segoe UI', 'Roboto', Arial, sans-serif;
    }
    .bubble-user {
        margin-left: auto;
        flex-direction: row-reverse;
    }
    .bubble-ai {
        margin-right: auto;
    }
    .bubble-content {
        max-width: 75%;
        padding: 1.1rem 1.4rem;
        border-radius: 22px;
        font-size: 1.13rem;
        font-weight: 600;
        box-shadow: 0 2px 12px 0 rgba(29,155,240,0.13), 0 0 8px 0 rgba(167,112,239,0.08);
        background: linear-gradient(135deg, #e3f2fd 0%, #fff 100%);
        color: #1d2b64;
        position: relative;
        letter-spacing: 0.01em;
        text-shadow: 0 1px 2px rgba(255,255,255,0.12);
        border: 1.5px solid rgba(29,155,240,0.08);
        backdrop-filter: blur(2px);
    }
    .bubble-user .bubble-content {
        background: linear-gradient(135deg, #a770ef 0%, #1d9bf0 100%);
        color: #fff;
        text-align: right;
        box-shadow: 0 2px 16px 0 rgba(29,155,240,0.18), 0 0 12px 0 rgba(167,112,239,0.13);
        border: 1.5px solid rgba(167,112,239,0.13);
    }
    .bubble-content strong {
        color: #ffeb3b;
        font-weight: 700;
    }
    .bubble-avatar {
        width: 48px;
        height: 48px;
        border-radius: 50%;
        background: linear-gradient(135deg, #1d9bf0 0%, #a770ef 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: #fff;
        font-size: 1.5rem;
        font-weight: 700;
        margin: 0 0.9rem;
        box-shadow: 0 2px 8px 0 rgba(29,155,240,0.13);
        border: 2.5px solid #fff;
    }
    .bubble-user .bubble-avatar {
        background: #fff;
        color: #1d9bf0;
        border: 2.5px solid #a770ef;
    }
    .bubble-meta {
        font-size: 1.01rem;
        color: #a770ef;
        margin-top: 0.25rem;
        text-align: right;
        font-weight: 500;
        letter-spacing: 0.01em;
    }
    .bubble-ai .bubble-meta {
        text-align: left;
        color: #1d9bf0;
    }
    .modern-input {
        border-radius: 18px;
        border: none;
        background: rgba(255,255,255,0.8);
        font-size: 1.18rem;
        padding: 1.2rem 1.3rem;
        box-shadow: 0 2px 8px 0 rgba(29,155,240,0.10);
        transition: box-shadow 0.15s;
    }
    .modern-input:focus {
        outline: none;
        box-shadow: 0 4px 16px 0 rgba(29,155,240,0.18);
    }
    .modern-btn {
        border-radius: 18px;
        font-size: 1.18rem;
        padding: 1.1rem 0;
        font-weight: 700;
        background: linear-gradient(90deg, #1d9bf0 0%, #a770ef 100%);
        border: none;
        color: #fff;
        box-shadow: 0 2px 8px 0 rgba(29,155,240,0.13);
        transition: background 0.15s, box-shadow 0.15s;
        letter-spacing: 0.01em;
    }
    .modern-btn:hover {
        background: linear-gradient(90deg, #a770ef 0%, #1d9bf0 100%);
        color: #fff;
        box-shadow: 0 4px 16px 0 rgba(29,155,240,0.18);
    }
    .modern-loading {
        display: flex;
        align-items: center;
        gap: 0.7rem;
        margin-top: 2.2rem;
        color: #1d9bf0;
        font-size: 1.13rem;
        font-weight: 600;
        letter-spacing: 0.01em;
    }
    @@media (max-width: 768px) {
        .glass-card { padding: 1.2rem !important; }
        .chat-history { max-height: 220px; font-size: 1.01rem; }
        .bubble-content { font-size: 1.01rem; padding: 0.8rem 1rem; }
        .bubble-avatar { width: 36px; height: 36px; font-size: 1.1rem; margin: 0 0.5rem; }
        .modern-input, .modern-btn { font-size: 1.01rem; padding: 0.8rem 0.7rem; }
    }
    .intro-box {
        background: rgba(255,255,255,0.88);
        border-radius: 18px;
        box-shadow: 0 2px 12px 0 rgba(29,155,240,0.10);
        padding: 1.2rem 1.5rem 1.1rem 1.5rem;
        margin-bottom: 2.1rem;
        text-align: center;
    }
    .intro-title {
        color: #1d2b64;
        font-size: 2.1rem;
        font-weight: 800;
        letter-spacing: 0.5px;
        margin-bottom: 0.5rem;
    }
    .intro-desc {
        color: #222;
        font-size: 1.13rem;
        font-weight: 600;
        margin-bottom: 0.2rem;
    }
    .intro-highlight {
        color: #1d9bf0;
        font-weight: 700;
    }
</style>

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="glass-card p-4 shadow-lg border-0">
                <div class="intro-box">
                    <div class="intro-title">Yapay Zeka Soru-Cevap</div>
                    <div class="intro-desc">
                        Finans, ekonomi ve borsa hakkında merak ettiklerinizi yapay zekaya hemen sorun!<br/>
                        <span class="intro-highlight">Anında, Türkçe ve anlaşılır cevaplar alın.</span>
                    </div>
                </div>
                <div class="chat-history" id="chatHistory"></div>
                <form id="chatForm">
                    <div class="mb-3">
                        <input type="text" id="questionInput" class="modern-input w-100" placeholder="Sorunuzu yazın..." required autocomplete="off" />
                    </div>
                    <button type="submit" class="modern-btn w-100">Sor <i class="bi bi-send ms-1"></i></button>
                </form>
                <div id="loading" class="modern-loading" style="display:none;">
                    <div class="spinner-border text-primary"></div> Cevap bekleniyor...
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const username = '@username';
        const chatHistoryDiv = document.getElementById('chatHistory');
        const form = document.getElementById('chatForm');
        const input = document.getElementById('questionInput');
        const loading = document.getElementById('loading');
        let chatHistory = [];
        let isWaiting = false;

        function renderHistory() {
            chatHistoryDiv.innerHTML = '';
            chatHistory.forEach(item => {
                // User bubble
                const userBubble = document.createElement('div');
                userBubble.className = 'chat-bubble bubble-user';
                userBubble.innerHTML = `
                    <div class="bubble-content">${item.Question}</div>
                    <div class="bubble-avatar">${username ? username.charAt(0).toUpperCase() : '?'}</div>
                `;
                chatHistoryDiv.appendChild(userBubble);
                // AI bubble
                const aiBubble = document.createElement('div');
                aiBubble.className = 'chat-bubble bubble-ai';
                aiBubble.innerHTML = `
                    <div class="bubble-avatar"><i class="bi bi-robot"></i></div>
                    <div>
                        <div class="bubble-content">${item.Answer}</div>
                        <div class="bubble-meta">${new Date(item.CreatedAt).toLocaleString()}</div>
                    </div>
                `;
                chatHistoryDiv.appendChild(aiBubble);
            });
            chatHistoryDiv.scrollTop = chatHistoryDiv.scrollHeight;
        }

        function fetchHistory() {
            if (!username) return;
            fetch(`https://localhost:7095/api/chat/history?username=${encodeURIComponent(username)}`)
                .then(r => r.json())
                .then(data => {
                    chatHistory = data;
                    renderHistory();
                });
        }

        form.addEventListener('submit', function (e) {
            e.preventDefault();
            if (isWaiting) return;
            isWaiting = true;
            loading.style.display = 'flex';
            const question = input.value;
            fetch('https://localhost:7095/api/chat/ask', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ question: username + ':' + question })
            })
            .then(r => r.json())
            .then(data => {
                loading.style.display = 'none';
                isWaiting = false;
                if (data.answer) {
                    chatHistory.push({ Question: question, Answer: data.answer, CreatedAt: new Date() });
                    renderHistory();
                    input.value = '';
                    input.focus();
                }
            })
            .catch(() => {
                loading.style.display = 'none';
                isWaiting = false;
            });
        });

        fetchHistory();
    </script>
}
